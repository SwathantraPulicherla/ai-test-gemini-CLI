name: AI Test Generation
on:
  issues:
    types: [labeled, opened]
  workflow_dispatch:
    inputs:
      issue_title:
        description: 'Issue title for test generation'
        required: false
        default: 'Manual test generation'
      issue_body:
        description: 'Issue description'
        required: false
        default: 'Generate unit tests manually'

jobs:
  generate-tests:
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.issue.labels.*.name, 'ai-test-generation') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc build-essential
          git clone https://github.com/ThrowTheSwitch/Unity.git unity
          
      - name: Install Python dependencies
        run: |
          pip install google-generativeai python-dotenv
          
      - name: Create test directory
        run: |
          mkdir -p tests/generated
          
      - name: Generate tests with AI
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ISSUE_TITLE: ${{ github.event.issue.title || github.event.inputs.issue_title || 'Manual test generation' }}
          ISSUE_BODY: ${{ github.event.issue.body || github.event.inputs.issue_body || 'Generate unit tests manually' }}
        run: |
          python scripts/ai_test_generator.py
          
      - name: Verify generated tests
        run: |
          echo "Generated tests:"
          ls -la tests/generated/
          if ls tests/generated/*_test.c 1> /dev/null 2>&1; then
            echo "Test files created successfully"
            for file in tests/generated/*_test.c; do
              echo "=== $file ==="
              head -10 "$file"
              echo "..."
            done
          else
            echo "No test files generated"
            exit 1
          fi
          
      - name: Build and run tests
        run: |
          rm -rf build  # Clean previous build to avoid CMake cache conflicts
          mkdir -p build
          cd build
          cmake ..
          make
          # Run all generated test executables
          for exe in *_test; do
            if [ -x "$exe" ]; then
              echo "Running $exe"
              ./$exe
            fi
          done
          # Run manual test
          ./test_temperature_sensor
          
      - name: Commit and push generated tests
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tests/generated/
          git commit -m "Add AI-generated test cases for issue #${{ github.event.issue.number }}" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref }} || echo "No changes to push"