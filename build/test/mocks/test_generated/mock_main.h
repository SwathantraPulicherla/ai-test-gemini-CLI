/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MAIN_H
#define _MOCK_MAIN_H

#include "unity.h"
#include "main.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_main_Init(void);
void mock_main_Destroy(void);
void mock_main_Verify(void);




#define add_Expect(a, b) TEST_FAIL_MESSAGE("add requires _ExpectAndReturn");
#define add_ExpectAndReturn(a, b, cmock_retval) add_CMockExpectAndReturn(__LINE__, a, b, cmock_retval)
void add_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int a, int b, int cmock_to_return);
#define multiply_Expect(a, b) TEST_FAIL_MESSAGE("multiply requires _ExpectAndReturn");
#define multiply_ExpectAndReturn(a, b, cmock_retval) multiply_CMockExpectAndReturn(__LINE__, a, b, cmock_retval)
void multiply_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int a, int b, int cmock_to_return);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
